/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const ce=require("react"),c=require("prop-types"),w=require("@progress/kendo-date-math"),me=require("../../components/BaseView.js"),L=require("../common/HorizontalResourceIterator.js"),J=require("./DayViewGroupRowContent.js"),Q=require("../common/VerticalResourceIterator.js"),j=require("./DayViewAllDayRowContent.js"),p=require("./DayViewRowContent.js"),ee=require("@progress/kendo-react-common"),o=require("../../utils/index.js"),ue=require("@progress/kendo-react-intl"),de=require("../../constants/index.js"),De=require("../../slots/SchedulerEditSlot.js"),ge=require("../../items/SchedulerEditItem.js"),W=require("../../context/SchedulerContext.js"),_=require("../../context/SchedulerResourceIteratorContext.js"),te=require("../../components/CurrentTimeMarket.js"),we=require("../../components/DateHeaderCell.js"),ae=require("../../services/rangeService.js"),ne=require("../../services/slotsService.js"),ye=require("../../services/occurrenceService.js"),re=require("../../services/itemsService.js");function Se(t){const g=Object.create(null,{[Symbol.toStringTag]:{value:"Module"}});if(t){for(const n in t)if(n!=="default"){const y=Object.getOwnPropertyDescriptor(t,n);Object.defineProperty(g,n,y.get?y:{enumerable:!0,get:()=>t[n]})}}return g.default=t,Object.freeze(g)}const a=Se(ce),H=0,O=1,ke=a.createElement("div",{className:"k-scheduler-cell k-side-cell"}),G=t=>{const{group:g,timezone:n,resources:y}=W.useSchedulerPropsContext(),h=ue.useInternationalization(),q=t.editItem||ge.SchedulerEditItem,M=t.editSlot||De.SchedulerEditSlot,v=t.showWorkHours,d=t.numberOfDays||T.numberOfDays,E=t.slotDivisions||T.slotDivisions,U=t.slotDuration||T.slotDuration,b=t.workWeekStart||T.workWeekStart,F=t.workWeekEnd||T.workWeekEnd,V=h.parseDate(t.workDayStart||t.isWorkDayStart||T.isWorkDayStart),N=h.parseDate(t.workDayEnd||t.isWorkDayEnd||T.isWorkDayEnd),Y=h.parseDate(t.startTime||T.startTime),Z=h.parseDate(t.endTime||T.endTime),[B]=W.useSchedulerDataContext(),f=W.useSchedulerGroupsContext(),P=W.useSchedulerOrientationContext(),K=W.useSchedulerFieldsContext(),l=W.useSchedulerDateRangeContext(),R=a.useMemo(()=>v?V:Y,[v,V,Y]),C=a.useMemo(()=>v?N:Z,[v,N,Z]),x=a.useMemo(()=>ae.toRanges(l,{step:w.MS_PER_DAY*d,timezone:n}).map(e=>({...e,isAllDay:!0})),[l.start.getTime(),l.end.getTime(),d]),m=a.useMemo(()=>ae.toRanges(l,{step:w.MS_PER_DAY,timezone:n}).map(e=>({...e,isAllDay:!1})),[l.start.getTime(),l.end.getTime(),n]),$=a.useMemo(()=>ne.toSlots(l,{step:w.MS_PER_DAY},{groups:f,ranges:x}),[l.start.getTime(),l.end.getTime(),n,x,f]),S=a.useMemo(()=>ne.toSlots(l,{step:U*de.MS_PER_MINUTE/E},{groups:f,ranges:m}).filter(e=>C.getTime()===R.getTime()||o.isInTimeRange(e.zonedStart,R,C)),[l.start.getTime(),l.end.getTime(),U,E,R.getTime(),C.getTime(),f,m]),z=a.useMemo(()=>ye.toOccurrences(B,{dateRange:l,fields:K,timezone:n}),[B,l.start.getTime(),l.end.getTime(),K,n]),oe=a.useMemo(()=>z.filter(e=>e.isAllDay),[z]),ie=a.useMemo(()=>z.filter(e=>!e.isAllDay),[z]),A=a.useMemo(()=>re.toItems(oe,{timezone:n},{groups:f,ranges:x}),[z,n,f,x]),I=a.useMemo(()=>re.toItems(ie,{timezone:n},{groups:f,ranges:m}).filter(e=>R.getTime()===C.getTime()||o.isInTimeRange(e.zonedStart,R,C)||o.isInTimeRange(e.zonedEnd,R,C)||o.isInTimeRange(new Date(e.zonedEnd.getTime()-(e.zonedEnd.getTime()-e.zonedStart.getTime())/2),R,C)),[z,n,f,m,R.getTime(),C.getTime()]);a.useMemo(()=>o.mapItemsToSlots(A,$,!1),[A,$]),a.useMemo(()=>o.mapSlotsToItems(A,$,!1),[A,$]),a.useMemo(()=>o.mapItemsToSlots(I,S,!1),[I,S]),a.useMemo(()=>o.mapSlotsToItems(I,S,!1),[I,S]);const X=a.createElement(_.SchedulerResourceIteratorContext.Consumer,null,({groupIndex:e})=>a.createElement("div",{className:"k-scheduler-row",key:e},m.map((r,D)=>a.createElement(we.DateHeaderCell,{as:t.dateHeaderCell,key:D,date:w.ZonedDate.fromLocalDate(new Date(r.zonedEnd.getTime()-(r.zonedEnd.getTime()-r.zonedStart.getTime())/2),n),start:r.start,end:r.end,format:{skeleton:"MEd"}})))),se=a.createElement(_.SchedulerResourceIteratorContext.Consumer,null,({groupIndex:e})=>a.createElement("div",{key:e,className:"k-scheduler-row"},x.map((r,D)=>$.filter(u=>u.group.index===e&&u.range.index===D).map((u,i,s)=>a.createElement(M,{...u,onDataAction:t.onDataAction,form:t.form,slot:t.slot,viewSlot:t.viewSlot,key:`${u.start.getTime()}:${u.group.index}`,row:0,col:P==="horizontal"?s.length*(e||0)+i:i,isWorkDay:0<=u.zonedStart.getDay()+(d-b)&&(u.zonedStart.getDay()+(d-b))%d<=F+(d-b),expandable:!0}))))),le=a.useMemo(()=>ee.classNames("k-scheduler-day-view",t.className),[t.className]);return a.createElement(a.Fragment,null,a.createElement(me.BaseView,{id:t.id,props:t,style:t.style,className:le,ranges:[...x,...m],slots:[...$,...S]},a.createElement("div",{className:"k-scheduler-head"},P==="horizontal"?a.createElement(a.Fragment,null,a.createElement(L.HorizontalResourceIterator,{nested:!0,group:g,resources:y,rowContent:J.DayViewGroupRowContent,childRowContent:J.DayViewGroupRowContent},X),a.createElement(L.HorizontalResourceIterator,{group:g,resources:y,rowContent:j.DayViewAllDayRowContent,childRowContent:j.DayViewAllDayRowContent},se),A.map(e=>a.createElement(q,{key:e.isRecurring?`${e.uid}:${e.group.index}:${e.range.index}:${e.originalStart}`:`${e.uid}:${e.group.index}:${e.range.index}`,...e,form:t.form,onDataAction:t.onDataAction,item:t.item,viewItem:t.viewItem,editable:t.editable,vertical:!1}))):a.createElement(Q.VerticalResourceIterator,{group:g,resources:y,cellContent:ke},X)),a.createElement("div",{className:"k-scheduler-body"},P==="horizontal"?a.createElement(a.Fragment,null,S.filter(e=>e.group.index===H&&e.range.index===H).map((e,r)=>a.createElement(a.Fragment,{key:e.index},a.createElement(L.HorizontalResourceIterator,{nested:!1,group:g,resources:y,rowContent:p.DayViewRowContent,rowContentProps:{timeHeaderCell:t.timeHeaderCell,isMaster:r%E===0,isLast:(r+1)%E===0,slot:e}},a.createElement(_.SchedulerResourceIteratorContext.Consumer,null,({groupIndex:D})=>a.createElement("div",{className:ee.classNames("k-scheduler-row",{"k-middle-row":(r+1)%E!==0})},m.map((u,i)=>S.filter(s=>s.index===e.index&&s.range.index===i&&s.group.index===D).map(s=>a.createElement(M,{key:`${s.start.getTime()}:${s.group.index}`,...s,onDataAction:t.onDataAction,slot:t.slot,viewSlot:t.viewSlot,form:t.form,row:r+O,col:m.length*(D||0)+i,isWorkHour:o.isInTimeRange(s.zonedStart,V,N),isWorkDay:o.isInDaysRange(s.zonedEnd.getDay(),b,F),editable:t.editable})))))))),t.currentTimeMarker&&o.intersects(o.first(m).start,o.last(m).end,new Date,new Date,!0)&&a.createElement(te.CurrentTimeMarker,null)):a.createElement(a.Fragment,null,a.createElement(Q.VerticalResourceIterator,{nested:!0,group:g,resources:y},a.createElement(_.SchedulerResourceIteratorContext.Consumer,null,({groupIndex:e})=>a.createElement(a.Fragment,{key:e},a.createElement("div",{className:"k-scheduler-row"},a.createElement(j.DayViewAllDayRowContent,{groupIndex:e},x.map((r,D)=>{const u=S.filter(i=>i.group.index===e&&i.range.index===H).length;return $.filter(i=>i.group.index===e&&i.range.index===D).map((i,s)=>a.createElement(M,{slot:t.slot,viewSlot:t.viewSlot,form:t.form,...i,onDataAction:t.onDataAction,key:`${i.start.getTime()}:${i.group.index}`,className:"k-scheduler-alldays-slot",row:u*(e||0)+(e||0)*O,col:s,expandable:!0}))}))),S.filter(r=>r.group.index===e&&r.range.index===H).map((r,D,u)=>a.createElement("div",{className:"k-scheduler-row",key:r.index},a.createElement(p.DayViewRowContent,{slot:r,isMaster:D%E===0,isLast:(D+1)%E===0,timeHeaderCell:t.timeHeaderCell},m.map((i,s)=>S.filter(k=>k.index===r.index&&k.group.index===e&&k.range.index===s).map(k=>a.createElement(M,{slot:t.slot,viewSlot:t.viewSlot,form:t.form,onDataAction:t.onDataAction,...k,key:`${k.start.getTime()}:${k.group.index}`,row:u.length*(e||0)+D+(e||0)*O+O,col:s,editable:t.editable,isWorkHour:o.isInTimeRange(k.zonedStart,V,N),isWorkDay:0<=k.zonedStart.getDay()+(d-b)&&(k.zonedStart.getDay()+(d-b))%d<=F+(d-b)})))))),t.currentTimeMarker&&o.intersects(o.first(m).start,o.last(m).end,new Date,new Date,!0)&&a.createElement(te.CurrentTimeMarker,{groupIndex:e})))),A.map(e=>a.createElement(q,{key:e.isRecurring?`${e.uid}:${e.group.index}:${e.range.index}:${e.originalStart}`:`${e.uid}:${e.group.index}:${e.range.index}`,...e,onDataAction:t.onDataAction,viewItem:t.viewItem,item:t.item,form:t.form,editable:t.editable,vertical:!1}))),I.map(e=>a.createElement(q,{key:e.isRecurring?`${e.uid}:${e.group.index}:${e.range.index}:${e.originalStart}`:`${e.uid}:${e.group.index}:${e.range.index}`,...e,format:"t",onDataAction:t.onDataAction,viewItem:t.viewItem,item:t.item,form:t.form,editable:t.editable,vertical:!0})))))},Te=({date:t,numberOfDays:g=1,timezone:n})=>{const y=w.ZonedDate.fromLocalDate(t,n),h=w.getDate(y),q=w.addDays(h,g),M=w.ZonedDate.fromUTCDate(o.toUTCDateTime(h),n),v=w.ZonedDate.fromUTCDate(o.toUTCDateTime(q),n),d=new Date(M.getTime()),E=new Date(v.getTime());return{start:d,end:E,zonedStart:M,zonedEnd:v}},T={name:"multi-day",title:"Multi Day",currentTimeMarker:!0,dateRange:Te,selectedDateFormat:"{0:D} - {1:D}",selectedShortDateFormat:"{0:d} - {1:d}",numberOfDays:1,startTime:"00:00",endTime:"23:59",isWorkDayStart:"08:00",isWorkDayEnd:"17:00",workWeekStart:w.Day.Monday,workWeekEnd:w.Day.Friday,step:1,slotDivisions:2,slotDuration:60,showCurrentTime:!0,defaultShowWorkHours:!0};G.propTypes={currentTimeMarker:c.bool,name:c.string,numberOfDays:c.number,startTime:c.string,endTime:c.string,workDayStart:c.string,workDayEnd:c.string,workWeekStart:c.number,workWeekEnd:c.any,slotDivisions:c.number,slotDuration:c.number,showWorkHours:c.bool,selectedDateFormat:c.string,selectedShortDateFormat:c.string};G.displayName="KendoReactSchedulerMultiDayView";exports.MultiDayView=G;exports.multiDayViewDefaultProps=T;
